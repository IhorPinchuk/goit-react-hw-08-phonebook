{"version":3,"file":"static/js/995.b2d51c5d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/contactForm/ContactForm.module.css?fd94","redux/contacts/selectors.js","components/contactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/contactList/ContactList.module.css?7e3b","webpack://react-homework-template/./src/components/contactList/contactElementList/ContactElementList.module.css?860a","components/contactList/contactElementList/ContactElementList.jsx","components/filter/filteredContacts.js","redux/filter/selectors.js","components/contactList/ContactList.jsx","webpack://react-homework-template/./src/components/filter/Filter.module.css?e85f","components/filter/Filter.jsx","webpack://react-homework-template/./src/components/phonebook/Phonebook.module.css?ee46","components/phonebook/Phonebook.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__ttXmo\",\"input_label\":\"ContactForm_input_label__hTxbe\",\"input\":\"ContactForm_input__e2U+9\",\"form__btn\":\"ContactForm_form__btn__BPa9r\"};","export const contactsSelector = state => state.contacts;\n","import { useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postContactsThunk } from 'redux/contacts/contactsThunk';\nimport { contactsSelector } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const { contacts } = useSelector(contactsSelector);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const newContact = {\n    name,\n    number,\n  };\n\n  const handleChangeName = e => {\n    const { value } = e.currentTarget;\n    setName(value);\n  };\n\n  const handleChangeNumber = e => {\n    const { value } = e.currentTarget;\n    setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contactNameToLowerCase = contacts.map(contact =>\n      contact.name.toLowerCase()\n    );\n    if (contactNameToLowerCase.includes(name.toLowerCase())) {\n      Notify.failure(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(postContactsThunk(newContact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.input_label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n      <label className={css.input_label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"^[0-9]+$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </label>\n      <button className={css.form__btn} type=\"submit\" disabled={!name || !number}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"ContactList_contact__list__76uKK\",\"contact__item\":\"ContactList_contact__item__ZKGye\"};","// extracted by mini-css-extract-plugin\nexport default {\"contact__list__item__btn\":\"ContactElementList_contact__list__item__btn__IpaEZ\"};","import PropTypes from 'prop-types';\nimport css from './ContactElementList.module.css';\nimport { useSelector } from 'react-redux';\nimport { contactsSelector } from 'redux/contacts/selectors';\n// import { Button, CircularProgress, LinearProgress } from '@mui/material';\n// import DeleteIcon from '@mui/icons-material/Delete';\n\nexport default function ContactElementList({\n  id,\n  name,\n  number,\n  handleClickDelete,\n}) {\n\n const { isLoadingContacts, isLoadingAddContact, isLoadingDellContact } = useSelector(contactsSelector) \n\n  return (\n    <>\n      {/* <div className={css.contact_element_scroll}> */}\n      {/* <div className={css.contact_element_wrapper}> */}\n      <p>\n        {name}:\n      </p>\n      <p>\n        {number}\n      </p>\n      <button\n        className={css.contact__list__item__btn}\n          type=\"button\"\n          value={id}\n          onClick={handleClickDelete}\n          disabled={isLoadingContacts || isLoadingAddContact || isLoadingDellContact}\n        >       \n        {/* <LinearProgress color='secondary'/>   */}\n          Delete        \n        </button>\n      {/* </div> */}\n      {/* </div> */}\n\n      {/* <AccessAlarmIcon>\n        <ThreeDRotation>\n<svg data-testid=\"DeleteIcon\"><DeleteIcon/></svg>\n        </ThreeDRotation>\n      </AccessAlarmIcon> */}\n      \n      {/* <DeleteIcon color=\"secondary\" /> */}\n\n      \n      \n      {/* <Button color=\"secondary\">Secondary</Button>\n<Button variant=\"contained\" color=\"success\">\n  Success\n</Button>\n<Button variant=\"outlined\" color=\"error\">\n  Error\n</Button> */}\n      \n      {/* <CircularProgress /> */}\n      {/* <LinearProgress /> */}\n\n    </>\n\n    \n  );\n}\n\nContactElementList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  handleClickDelete: PropTypes.func.isRequired,\n};\n","export const filteredContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n","export const filterSelector = state => state.filter;\n","import css from './ContactList.module.css';\nimport ContactElementList from 'components/contactList/contactElementList/ContactElementList';\nimport { filteredContacts } from 'components/filter/filteredContacts';\nimport {\n  deleteContactThunk,\n  getContactsThunk,\n} from 'redux/contacts/contactsThunk';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelector } from 'redux/contacts/selectors';\nimport { filterSelector } from 'redux/filter/selectors';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(contactsSelector);\n  const { filter } = useSelector(filterSelector);\n  const getFilteredContacts = filteredContacts(contacts, filter);\n \n\n  const handleClickDelete = (id) => {\n  dispatch(deleteContactThunk(id))\n}\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n    \n  return (\n    <ul className={css.contact__list}>\n      {getFilteredContacts.map(({ id, name, number }) => (\n        <li className={css.contact__item} key={id}>\n          <ContactElementList\n            id={id}\n            name={name}\n            number={number}\n            handleClickDelete={(e) => { \n              // if (e.target.value === id ) {\n              //   console.log('Привіт');\n              // } \n              // console.log('id :>> ', id);\n              // console.log('object :>> ', e.currentTarget.value);\n              // console.log('target :>> ', e.target);\n              handleClickDelete(id)\n            }}\n            \n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__label\":\"Filter_filter__label__333j7\",\"filter__input\":\"Filter_filter__input__HeWjX\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/filter/filterSlice';\nimport { filterSelector } from 'redux/filter/selectors';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const { filter } = useSelector(filterSelector);\n\n  const handleChange = e => {\n    dispatch(filterContact(e.target.value));\n  };\n\n  return (\n    <label className={css.filter__label}>\n      Find contacts by name\n      <input\n        className={css.filter__input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n      ></input>\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Phonebook_wrapper__JnoCA\",\"contact_wrapper\":\"Phonebook_contact_wrapper__btW8f\",\"contact_form\":\"Phonebook_contact_form__cSZeG\",\"contact_list_wrapper\":\"Phonebook_contact_list_wrapper__uCnrQ\",\"title\":\"Phonebook_title__Gy23c\",\"title_contacts\":\"Phonebook_title_contacts__5ZwPX\"};","import { ContactForm } from 'components/contactForm/ContactForm';\nimport ContactList from 'components/contactList/ContactList';\nimport Filter from 'components/filter/Filter';\nimport css from './Phonebook.module.css';\nimport { LinearProgress } from '@mui/material';\nimport { useSelector } from 'react-redux';\n\nimport { contactsSelector } from 'redux/contacts/selectors';\nimport { authSelector } from 'redux/auth/selectors';\n\nconst Phonebook = () => {\n\n const { isLoadingContacts, isLoadingAddContact, isLoadingDellContact } = useSelector(contactsSelector)\n  const { isLoading } = useSelector(authSelector);\n  return (\n    <>\n   {isLoading && <LinearProgress />}   \n    <div className={css.wrapper}>      \n      <h1 className={css.title}>Phonebook</h1>\n      <div className={css.contact_wrapper}>\n        <section className={css.contact_form}>\n          <ContactForm />\n        </section>\n        <section className={css.contact_list_wrapper}>\n          <h2 className={css.title_contacts}>Contacts</h2>\n          <Filter />\n          {(isLoadingContacts || isLoadingAddContact || isLoadingDellContact) && <LinearProgress />}\n          <ContactList />\n        </section>\n      </div>\n      </div>\n      </>\n  );\n};\n\nexport default Phonebook;\n","\nimport Phonebook from \"components/phonebook/Phonebook\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authSelector } from \"redux/auth/selectors\";\n\nconst Contacts = () => {\nconst {token: isAuth, } = useSelector(authSelector)\n    const navigate = useNavigate();\n\n    useEffect(() => {\n!isAuth && navigate('/')\n    }, [isAuth, navigate])\n\n    return (\n   <Phonebook />\n)\n}\n\nexport default Contacts;"],"names":["contactsSelector","state","contacts","ContactForm","useSelector","dispatch","useDispatch","useState","name","setName","number","setNumber","newContact","reset","className","css","onSubmit","e","preventDefault","map","contact","toLowerCase","includes","Notify","postContactsThunk","type","pattern","title","required","value","onChange","currentTarget","disabled","ContactElementList","id","handleClickDelete","isLoadingContacts","isLoadingAddContact","isLoadingDellContact","onClick","filterSelector","filter","ContactList","getFilteredContacts","filteredContacts","useEffect","getContactsThunk","deleteContactThunk","Filter","filterContact","target","isLoading","authSelector","LinearProgress","isAuth","token","navigate","useNavigate"],"sourceRoot":""}