{"version":3,"file":"static/js/950.e5acb5a9.chunk.js","mappings":"gRA8DA,EAvDkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAGMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAOC,GAAP,wEACnBA,EAAEC,iBADiB,SAEbJ,GAASK,EAAAA,EAAAA,IAAW,CAAET,MAAAA,EAAOE,SAAAA,KAAaQ,SAASC,KAAnD,mCAAwD,WAAOC,GAAP,wEAE5DC,EAAAA,GAAAA,QAAA,kBAAyBD,EAAIE,KAAKC,KAAlC,QAF4D,SAG/CX,GAASY,EAAAA,EAAAA,IAAgBJ,EAAIE,OAHkB,mFAAxD,uDAIHG,OAAM,SAACC,GAER,OADAL,EAAAA,GAAAA,MAAY,8BACLK,CACR,IATkB,2CAAH,sDAYZC,EAAe,SAAC,GAA4B,IAAD,IAA1BC,OAAQC,EAAkB,EAAlBA,MACpB,UADsC,EAAXN,KACjBd,EAASoB,GAASlB,EAAYkB,EAClD,EAIC,OACJ,kBAAMC,aAAa,MAAMC,SAAUjB,EAAnC,WACM,sCAEE,kBACEkB,KAAK,QACHT,KAAK,QACLM,MAAOrB,EACPyB,SAAUN,EACZO,YAAY,oBAGhB,yCAEE,kBACEF,KAAK,WACHT,KAAK,WACLM,MAAOnB,EACPuB,SAAUN,EACZO,YAAY,uBAGhB,mBAAQF,KAAK,SAASG,UAAW3B,IAAUE,EAA3C,qBAGA,qBAGL,ECpDD,EANc,WACV,OACA,SAAC,EAAD,GAEH,C","sources":["components/loginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["// import { login } from \"components/services/authApi\";\nimport { useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { useDispatch } from \"react-redux\";\n// import { useNavigate } from \"react-router-dom\";\nimport { getProfileThunk, loginThunk } from \"redux/auth/authThunks\";\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  // const navigate = useNavigate();\n\n  const dispatch = useDispatch()\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await dispatch(loginThunk({ email, password })).unwrap().then(async (res) => {\n          // navigate('/contacts')\n      toast.success(`Welcome ${res.user.name}!!!`);\n      return await dispatch(getProfileThunk(res.user))\n    }).catch((error) => {\n      toast.error('Invalid email or password.');\n      return error;\n    })    \n  }\n\n  const handleChange = ({target:{value, name}}) => {\n    name === 'email' ? setEmail(value) : setPassword(value);\n  }\n\n\n\n    return (\n<form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <label>\n        Email\n        <input          \n          type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          placeholder=\"Enter email\"\n        />\n      </label>\n      <label>\n        Password\n        <input\n          type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          placeholder=\"Enter password\"\n        />\n      </label>\n      <button type=\"submit\" disabled={!email || !password}>\n        Log In\n      </button>\n      <div></div>\n    </form>\n    )\n}\n\nexport default LoginForm;","import LoginForm from \"components/loginForm/LoginForm\";\n\nconst Login = () => {    \n    return (\n    <LoginForm />\n)\n}\n\nexport default Login;"],"names":["useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleSubmit","e","preventDefault","loginThunk","unwrap","then","res","toast","user","name","getProfileThunk","catch","error","handleChange","target","value","autoComplete","onSubmit","type","onChange","placeholder","disabled"],"sourceRoot":""}