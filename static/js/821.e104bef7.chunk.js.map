{"version":3,"file":"static/js/821.e104bef7.chunk.js","mappings":"mPAuEA,EAjEqB,WACnB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAeXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,MAAOV,EAAa,EAAbA,KAC9B,UAATA,EACIG,EAASO,GACA,aAATV,EACAK,EAAYK,GACZT,EAAQS,EACb,EAED,OACE,kBAAMC,aAAa,MAAMC,SAtBN,SAAAC,GACnBA,EAAEC,kBACFC,EAAAA,EAAAA,IAAS,CACPf,KAAAA,EACAE,MAAAA,EACAE,SAAAA,IACCY,MAAK,kBAAMV,EAAS,SAAf,IAA0BW,OAAM,SAAAC,GAGtC,OAFAC,EAAAA,GAAAA,MAAY,+EAELD,EAAME,SAASC,KAAKC,OAC5B,GACF,EAWC,WACE,yCAEE,kBACEC,KAAK,OACLvB,KAAK,OACLU,MAAOV,EACPwB,SAAUhB,EACViB,YAAY,wBAGhB,sCAEE,kBACEF,KAAK,QACLvB,KAAK,QACLU,MAAOR,EACPsB,SAAUhB,EACViB,YAAY,oBAGhB,yCAEE,kBACEF,KAAK,WACLvB,KAAK,WACLU,MAAON,EACPoB,SAAUhB,EACViB,YAAY,uBAGhB,mBAAQF,KAAK,SAASG,UAAW1B,IAASE,IAAUE,EAApD,uBAGL,EC7DD,EANiB,WACb,OACI,SAAC,EAAD,GAEP,C","sources":["components/registerForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["\nimport { register } from 'components/services/authApi';\nimport { useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const navigate = useNavigate()\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    register({\n      name,\n      email,\n      password,\n    }).then(() => navigate('/login')).catch(error => {          \n      toast.error('Invalid email or password. The minimum password length must be 7 characters');\n      \n      return error.response.data.message     \n    })\n  };\n\n  const handleChange = ({ target: { value, name } }) => {\n    name === 'email'\n      ? setEmail(value)\n      : name === 'password'\n      ? setPassword(value)\n      : setName(value);\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <label>\n        Username\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter user name\"\n        />\n      </label>\n      <label>\n        Email\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          placeholder=\"Enter email\"\n        />\n      </label>\n      <label>\n        Password\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          placeholder=\"Enter password\"\n        />\n      </label>\n      <button type=\"submit\" disabled={!name || !email || !password}>Sign Up</button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from \"components/registerForm/RegisterForm\";\n\nconst Register = () => {\n    return (\n        <RegisterForm />\n    )\n}\n\nexport default Register;"],"names":["useState","name","setName","email","setEmail","password","setPassword","navigate","useNavigate","handleChange","target","value","autoComplete","onSubmit","e","preventDefault","register","then","catch","error","toast","response","data","message","type","onChange","placeholder","disabled"],"sourceRoot":""}