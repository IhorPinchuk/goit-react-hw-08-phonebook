{"version":3,"file":"static/js/995.887cdf1b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/contactForm/ContactForm.module.css?fd94","redux/contacts/selectors.js","components/contactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/contactList/ContactList.module.css?7e3b","webpack://react-homework-template/./src/components/contactList/contactElementList/ContactElementList.module.css?860a","components/contactList/contactElementList/ContactElementList.jsx","components/filter/filteredContacts.js","redux/filter/selectors.js","components/contactList/ContactList.jsx","webpack://react-homework-template/./src/components/filter/Filter.module.css?e85f","components/filter/Filter.jsx","webpack://react-homework-template/./src/components/phonebook/Phonebook.module.css?ee46","components/phonebook/Phonebook.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__ttXmo\",\"input_label\":\"ContactForm_input_label__hTxbe\",\"input\":\"ContactForm_input__e2U+9\",\"form__btn\":\"ContactForm_form__btn__BPa9r\"};","export const contactsSelector = state => state.contacts;\n","import { useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postContactsThunk } from 'redux/contacts/contactsThunk';\nimport { contactsSelector } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const { contacts } = useSelector(contactsSelector);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const newContact = {\n    name,\n    number,\n  };\n\n  const handleChangeName = e => {\n    const { value } = e.currentTarget;\n    setName(value);\n  };\n\n  const handleChangeNumber = e => {\n    const { value } = e.currentTarget;\n    setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contactNameToLowerCase = contacts.map(contact =>\n      contact.name.toLowerCase()\n    );\n    if (contactNameToLowerCase.includes(name.toLowerCase())) {\n      Notify.failure(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(postContactsThunk(newContact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.input_label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          placeholder=\"Enter name\"\n          onChange={handleChangeName}\n        />\n      </label>\n      <label className={css.input_label}>\n        Number\n        <input\n          className={css.input}\n          format=\"(###) ###-##-##\"          \n          type=\"tel\"\n          name=\"number\"\n          pattern=\"^[0-9]+$\"          \n          required\n          value={number}\n          placeholder=\"Enter phone number\"\n          onChange={handleChangeNumber}\n        />\n      </label>\n      <button className={css.form__btn} type=\"submit\" disabled={!name || !number}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"ContactList_contact__list__76uKK\",\"contact__item\":\"ContactList_contact__item__ZKGye\"};","// extracted by mini-css-extract-plugin\nexport default {\"contact__list__item__text\":\"ContactElementList_contact__list__item__text__WSsdV\",\"contact__list__item__btn\":\"ContactElementList_contact__list__item__btn__IpaEZ\"};","import PropTypes from 'prop-types';\nimport css from './ContactElementList.module.css';\nimport { useSelector } from 'react-redux';\nimport { contactsSelector } from 'redux/contacts/selectors';\nimport { CircularProgress } from '@mui/material';\n\nexport default function ContactElementList({\n  id,\n  name,\n  number,\n  handleClickDelete,\n}) {\n  const { isLoadingContacts, isLoadingAddContact, isLoadingDellContact } =\n    useSelector(contactsSelector);\n\n  return (\n    <>\n      <p className={css.contact__list__item__text}>\n        <span> {name}:</span>\n        <span>{number}</span>\n      </p>\n      <button\n        className={css.contact__list__item__btn}\n        type=\"button\"\n        value={id}\n        onClick={handleClickDelete}\n        disabled={\n          isLoadingContacts || isLoadingAddContact || isLoadingDellContact\n        }\n      >\n        {isLoadingDellContact ? <CircularProgress size={15} /> : 'Delete'}\n      </button>\n    </>\n  );\n}\n\nContactElementList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  handleClickDelete: PropTypes.func.isRequired,\n};\n","export const filteredContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n","export const filterSelector = state => state.filter;\n","import css from './ContactList.module.css';\nimport ContactElementList from 'components/contactList/contactElementList/ContactElementList';\nimport { filteredContacts } from 'components/filter/filteredContacts';\nimport {\n  deleteContactThunk,\n  getContactsThunk,\n} from 'redux/contacts/contactsThunk';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelector } from 'redux/contacts/selectors';\nimport { filterSelector } from 'redux/filter/selectors';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(contactsSelector);\n  const { filter } = useSelector(filterSelector);\n  const getFilteredContacts = filteredContacts(contacts, filter);\n\n  const handleClickDelete = id => {\n    dispatch(deleteContactThunk(id));\n  };\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <ul className={css.contact__list}>\n      {getFilteredContacts.map(({ id, name, number }) => (\n        <li className={css.contact__item} key={id}>\n          <ContactElementList\n            id={id}\n            name={name}\n            number={number}\n            handleClickDelete={() => {\n              // if (e.target.value === id ) {\n              //   console.log('Привіт');\n              // }\n              handleClickDelete(id);\n            }}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__label\":\"Filter_filter__label__333j7\",\"filter__input\":\"Filter_filter__input__HeWjX\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/filter/filterSlice';\nimport { filterSelector } from 'redux/filter/selectors';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const { filter } = useSelector(filterSelector);\n\n  const handleChange = e => {\n    dispatch(filterContact(e.target.value));\n  };\n\n  return (\n    <label className={css.filter__label}>\n      Find contacts by name\n      <input\n        className={css.filter__input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Search by name\"\n        onChange={handleChange}\n      ></input>\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Phonebook_wrapper__JnoCA\",\"contact_wrapper\":\"Phonebook_contact_wrapper__btW8f\",\"contact_form\":\"Phonebook_contact_form__cSZeG\",\"contact_list_wrapper\":\"Phonebook_contact_list_wrapper__uCnrQ\",\"title\":\"Phonebook_title__Gy23c\",\"title_contacts\":\"Phonebook_title_contacts__5ZwPX\"};","import { ContactForm } from 'components/contactForm/ContactForm';\nimport ContactList from 'components/contactList/ContactList';\nimport Filter from 'components/filter/Filter';\nimport css from './Phonebook.module.css';\nimport { LinearProgress } from '@mui/material';\nimport { useSelector } from 'react-redux';\n\nimport { contactsSelector } from 'redux/contacts/selectors';\nimport { authSelector } from 'redux/auth/selectors';\n\nconst Phonebook = () => {\n  const { isLoadingContacts, isLoadingAddContact, isLoadingDellContact } =\n    useSelector(contactsSelector);\n  const { isLoading } = useSelector(authSelector);\n  return (\n    <>\n      {isLoading && <LinearProgress />}\n      <div className={css.wrapper}>\n        <h1 className={css.title}>Phonebook</h1>\n        <div className={css.contact_wrapper}>\n          <section className={css.contact_form}>\n            <ContactForm />\n          </section>\n          <section className={css.contact_list_wrapper}>\n            <h2 className={css.title_contacts}>Contacts</h2>\n            <Filter />\n            {(isLoadingContacts ||\n              isLoadingAddContact ||\n              isLoadingDellContact) && <LinearProgress />}\n            <ContactList />\n          </section>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Phonebook;\n","import Phonebook from 'components/phonebook/Phonebook';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { authSelector } from 'redux/auth/selectors';\n\nconst Contacts = () => {\n  const { token: isAuth } = useSelector(authSelector);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    !isAuth && navigate('/');\n  }, [isAuth, navigate]);\n\n  return <Phonebook />;\n};\n\nexport default Contacts;\n"],"names":["contactsSelector","state","contacts","ContactForm","useSelector","dispatch","useDispatch","useState","name","setName","number","setNumber","newContact","reset","className","css","onSubmit","e","preventDefault","map","contact","toLowerCase","includes","Notify","postContactsThunk","type","pattern","title","required","value","placeholder","onChange","currentTarget","format","disabled","ContactElementList","id","handleClickDelete","isLoadingContacts","isLoadingAddContact","isLoadingDellContact","onClick","CircularProgress","size","filterSelector","filter","ContactList","getFilteredContacts","filteredContacts","useEffect","getContactsThunk","deleteContactThunk","Filter","filterContact","target","isLoading","authSelector","LinearProgress","isAuth","token","navigate","useNavigate"],"sourceRoot":""}