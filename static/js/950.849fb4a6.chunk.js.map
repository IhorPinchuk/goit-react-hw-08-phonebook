{"version":3,"file":"static/js/950.849fb4a6.chunk.js","mappings":"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","sources":["components/loader/Loader.js","components/loginForm/LoginForm.jsx","pages/Login.jsx","../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../node_modules/@mui/private-theming/useTheme/useTheme.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../node_modules/@mui/material/styles/ThemeProvider.js"],"sourcesContent":["import { CircularProgress, } from '@mui/material';\n\n\nexport const Loader = ({size}) => {\n        return (        \n            <CircularProgress size={size} sx={{display: 'block', marginTop: '50px', marginRight: 'auto', marginLeft: 'auto' }} />\n)\n}","// import { login } from \"components/services/authApi\";\nimport { Avatar, Box, Button, Container, CssBaseline, Grid, TextField, ThemeProvider, Typography, createTheme } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { useDispatch } from \"react-redux\";\n// import { useNavigate } from \"react-router-dom\";\nimport { getProfileThunk, loginThunk } from \"redux/auth/authThunks\";\n\nconst theme = createTheme();\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  // const navigate = useNavigate();\n\n  const dispatch = useDispatch()\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await dispatch(loginThunk({ email, password })).unwrap().then(async (res) => {\n          // navigate('/contacts')\n      toast.success(`Welcome ${res.user.name}!!!`);\n      return await dispatch(getProfileThunk(res.user))\n    }).catch((error) => {\n      toast.error('Invalid email or password.');\n      return error;\n    })    \n  }\n\n  const handleChange = ({target:{value, name}}) => {\n    name === 'email' ? setEmail(value) : setPassword(value);\n  }\n\n\n\n    return (\n//  <form autoComplete=\"off\" onSubmit={handleSubmit}>\n//       <label>\n//         Email\n//         <input          \n//           type=\"email\"\n//             name=\"email\"\n//             value={email}\n//             onChange={handleChange}\n//           placeholder=\"Enter email\"\n//         />\n//       </label>\n//       <label>\n//         Password\n//         <input\n//           type=\"password\"\n//             name=\"password\"\n//             value={password}\n//             onChange={handleChange}\n//           placeholder=\"Enter password\"\n//         />\n//       </label>\n//       <button type=\"submit\" disabled={!email || !password}>\n//         Log In\n//       </button>\n//       <div></div>\n//       </form> \n      \n<ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n            sx={{\n            marginTop: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            }}\n        >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            {/* <LockOutlinedIcon /> */}\n            </Avatar>\n            <Typography component=\"p\" variant=\"h5\">\n            Log In\n            </Typography>\n            <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                <TextField\n                    required\n                    fullWidth\n                    // id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={handleChange}\n                />\n                </Grid>\n                <Grid item xs={12}>\n                <TextField\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    // id=\"password\"\n                  autoComplete=\"new-password\"\n                  onChange={handleChange}\n                />\n                </Grid>\n            </Grid>\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                disabled={!email || !password}\n            >\n                Log In\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                <Typography  color=\"inherit\" align=\"center\" component=\"p\">\n                    You don't have an account? Sign Up\n                </Typography>\n                </Grid>\n            </Grid>\n            </Box>\n        </Box>        \n        </Container>\n    </ThemeProvider>\n\n\n\n    )\n}\n\nexport default LoginForm;","import { Loader } from 'components/loader/Loader';\nimport LoginForm from 'components/loginForm/LoginForm';\nimport { useSelector } from 'react-redux';\nimport { authSelector } from 'redux/auth/selectors';\n\nconst Login = () => {\n  const { isLoading } = useSelector(authSelector);\n\n  return isLoading ? <Loader size={100} /> : <LoginForm />;\n};\n\nexport default Login;\n","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return {\n    ...outerTheme,\n    ...localTheme\n  };\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: children\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider(_ref) {\n  let {\n      theme: themeInput\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const scopedTheme = themeInput[THEME_ID];\n  return /*#__PURE__*/_jsx(SystemThemeProvider, _extends({}, props, {\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;"],"names":["Loader","size","sx","display","marginTop","marginRight","marginLeft","theme","createTheme","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleSubmit","e","preventDefault","loginThunk","unwrap","then","res","toast","user","name","getProfileThunk","catch","error","handleChange","target","value","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","flexDirection","alignItems","Avatar","m","bgcolor","Typography","variant","noValidate","onSubmit","mt","Grid","container","spacing","item","xs","TextField","required","fullWidth","label","autoComplete","onChange","type","Button","mb","disabled","justifyContent","color","align","useSelector","authSelector","isLoading","React","useTheme","ThemeContext","Symbol","for","props","children","localTheme","outerTheme","output","mergeOuterLocalTheme","nested","_jsx","EMPTY_THEME","useThemeScoping","themeId","upperTheme","isPrivate","resolvedTheme","mergedTheme","result","_extends","useThemeWithoutDefault","upperPrivateTheme","usePrivateTheme","engineTheme","privateTheme","MuiThemeProvider","StyledEngineThemeContext","_excluded","_ref","themeInput","_objectWithoutPropertiesLoose","scopedTheme","THEME_ID","SystemThemeProvider","undefined"],"sourceRoot":""}