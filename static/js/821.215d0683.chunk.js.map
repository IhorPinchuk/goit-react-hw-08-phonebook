{"version":3,"file":"static/js/821.215d0683.chunk.js","mappings":"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","sources":["components/loader/Loader.js","components/registerForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { CircularProgress } from '@mui/material';\n\nexport const Loader = ({ size }) => {\n  return (\n    <CircularProgress\n      size={size}\n      sx={{\n        display: 'block',\n        marginTop: '50px',\n        marginRight: 'auto',\n        marginLeft: 'auto',\n      }}\n    />\n  );\n};\n","import { ThemeProvider } from '@emotion/react';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  TextField,\n  Typography,\n  createTheme,\n} from '@mui/material';\nimport { register } from 'components/services/authApi';\nimport { useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\n\nconst theme = createTheme();\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const navigate = useNavigate();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    register({\n      name,\n      email,\n      password,\n    })\n      .then(() => navigate('/login'))\n      .catch(error => {\n        toast.error(\n          'Invalid email or password. The minimum password length must be 7 characters'\n        );\n\n        return error.response.data.message;\n      });\n  };\n\n  const handleChange = ({ target: { value, name } }) => {\n    name === 'email'\n      ? setEmail(value)\n      : name === 'password'\n      ? setPassword(value)\n      : setName(value);\n    console.log('value :>> ', value);\n    console.log('name :>> ', name);\n  };\n\n  return (\n    // <form autoComplete=\"off\" onSubmit={handleSubmit}>\n    //   <label>\n    //     Username\n    //     <input\n    //       type=\"text\"\n    //       name=\"name\"\n    //       value={name}\n    //       onChange={handleChange}\n    //       placeholder=\"Enter user name\"\n    //     />\n    //   </label>\n    //   <label>\n    //     Email\n    //     <input\n    //       type=\"email\"\n    //       name=\"email\"\n    //       value={email}\n    //       onChange={handleChange}\n    //       placeholder=\"Enter email\"\n    //     />\n    //   </label>\n    //   <label>\n    //     Password\n    //     <input\n    //       type=\"password\"\n    //       name=\"password\"\n    //       value={password}\n    //       onChange={handleChange}\n    //       placeholder=\"Enter password\"\n    //     />\n    //   </label>\n    //   <button type=\"submit\" disabled={!name || !email || !password}>Sign Up</button>\n    // </form>\n\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}></Avatar>\n          <Typography component=\"p\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"name\"\n                  required\n                  fullWidth\n                  label=\"Name\"\n                  autoFocus\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  autoComplete=\"new-password\"\n                  onChange={handleChange}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={!name || !email || !password}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Typography color=\"inherit\" align=\"center\" component=\"p\">\n                  Already have an account? Log in\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default RegisterForm;\n","import { Loader } from 'components/loader/Loader';\nimport RegisterForm from 'components/registerForm/RegisterForm';\nimport { useSelector } from 'react-redux';\nimport { authSelector } from 'redux/auth/selectors';\n\nconst Register = () => {\n  const { isLoading } = useSelector(authSelector);\n  return isLoading ? <Loader size={100} /> : <RegisterForm />;\n};\n\nexport default Register;\n"],"names":["Loader","size","sx","display","marginTop","marginRight","marginLeft","theme","createTheme","useState","name","setName","email","setEmail","password","setPassword","navigate","useNavigate","handleChange","target","value","console","log","Container","component","maxWidth","CssBaseline","Box","flexDirection","alignItems","Avatar","m","bgcolor","Typography","variant","noValidate","onSubmit","e","preventDefault","register","then","catch","error","toast","response","data","message","mt","Grid","container","spacing","item","xs","TextField","autoComplete","required","fullWidth","label","autoFocus","onChange","type","Button","mb","disabled","justifyContent","color","align","useSelector","authSelector","isLoading"],"sourceRoot":""}